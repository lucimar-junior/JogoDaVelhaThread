package newpackage;

import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.ERROR_MESSAGE;
import javax.swing.table.DefaultTableModel;

public class ClienteFrame extends javax.swing.JFrame {
    Cliente cliente = new Cliente();
    Game game = new Game();
    public static String nome;
    Velha velha;
    String ipOponente;
    int portaOponente;
    
    public ClienteFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtEndServidor = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtPorta = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtNomeUsuario = new javax.swing.JTextField();
        btnConectar = new javax.swing.JButton();
        btnDesconectar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblUsuarios = new javax.swing.JTable();
        btnJogar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Login Jogo da Velha");
        setResizable(false);

        jLabel1.setText("Endereço do servidor:");

        txtEndServidor.setText("192.168.0.16");

        jLabel2.setText("Porta:");

        txtPorta.setText("12345");

        jLabel3.setText("Nome de usuário:");

        btnConectar.setText("Conectar");
        btnConectar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConectarActionPerformed(evt);
            }
        });

        btnDesconectar.setText("Desconectar");
        btnDesconectar.setEnabled(false);
        btnDesconectar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDesconectarActionPerformed(evt);
            }
        });

        jLabel4.setText("Usuários online:");

        tblUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Usuário", "Status", "Pontos", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblUsuarios.setEnabled(false);
        tblUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblUsuariosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblUsuarios);

        btnJogar.setText("Jogar com usuário selecionado");
        btnJogar.setEnabled(false);
        btnJogar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnJogarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 503, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtEndServidor, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                                    .addComponent(txtNomeUsuario))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtPorta))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnConectar)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnDesconectar))))
                            .addComponent(btnJogar)
                            .addComponent(jLabel4))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtEndServidor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtPorta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(txtNomeUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnConectar)
                        .addComponent(btnDesconectar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnJogar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnConectarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConectarActionPerformed
        boolean validaSucesso = validaPreenchimento(txtEndServidor.getText(), txtPorta.getText(), txtNomeUsuario.getText());
        
        if(validaSucesso){
            String ip = txtEndServidor.getText();
            int porta = Integer.parseInt(txtPorta.getText());
            String nomeUsuario = txtNomeUsuario.getText();
        
            boolean conexaoSucesso = cliente.conectar(ip, porta, nomeUsuario);

            if(conexaoSucesso) {
                btnConectar.setEnabled(false);
                btnDesconectar.setEnabled(true);
                tblUsuarios.setEnabled(true);
                txtEndServidor.setEnabled(false);
                txtNomeUsuario.setEnabled(false);
                txtPorta.setEnabled(false);
                nome = txtNomeUsuario.getText();
                new ClienteThread(nome).start();
                new AtualizaTabelaThread().start();
            }
        }        
    }//GEN-LAST:event_btnConectarActionPerformed

    private void btnDesconectarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDesconectarActionPerformed
        String ip = txtEndServidor.getText();
        int porta = Integer.parseInt(txtPorta.getText());
        String nomeUsuario = txtNomeUsuario.getText();
        boolean desconexaoSucesso = cliente.desconectar(ip, porta, nomeUsuario);
         
        if(desconexaoSucesso) {
            btnConectar.setEnabled(true);
            btnDesconectar.setEnabled(false);
            tblUsuarios.setEnabled(false);
            txtEndServidor.setEnabled(true);
            txtNomeUsuario.setEnabled(true);
            txtPorta.setEnabled(true);
            btnJogar.setEnabled(false);
            removeLinhas();
        }
    }//GEN-LAST:event_btnDesconectarActionPerformed

    private void tblUsuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblUsuariosMouseClicked
        int linha = tblUsuarios.getSelectedRow();
        String statusUsuario = tblUsuarios.getValueAt(linha, 1).toString();
        
        if(statusUsuario.equals("Disponível")){
            btnJogar.setEnabled(true);
        }
        
        else{
            btnJogar.setEnabled(false);
        }
    }//GEN-LAST:event_tblUsuariosMouseClicked

    private void btnJogarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnJogarActionPerformed
        String ip = txtEndServidor.getText();
        int porta = Integer.parseInt(txtPorta.getText());
        String meuNomeUsuario = txtNomeUsuario.getText();
        int linha = tblUsuarios.getSelectedRow();
        String nomeOponente = tblUsuarios.getValueAt(linha, 0).toString();        
        ipOponente = tblUsuarios.getValueAt(linha, 2).toString();
        portaOponente = Integer.parseInt(tblUsuarios.getValueAt(linha, 3).toString());
        
        boolean jogarSucesso = game.jogar(ip, porta, meuNomeUsuario, ipOponente, portaOponente, nomeOponente);
        
        if(jogarSucesso){
            new Velha().setVisible(true);
            Velha.txtVezJogador.setText(meuNomeUsuario);
            Velha.txtJogador.setText(meuNomeUsuario + ":");
            Velha.txtOponente.setText(nomeOponente + ":");
            Velha.txtJogadorVs.setText(meuNomeUsuario + " X " + nomeOponente);
            new GameClienteThread().start();
        }
    }//GEN-LAST:event_btnJogarActionPerformed
 
    private boolean validaPreenchimento(String ip, String porta, String nomeUsuario){
        if(ip.equals("")){
            JOptionPane.showMessageDialog(null, "O campo Endereço do servidor não pode estar vazio!", "Erro", ERROR_MESSAGE);
            return false;
        }
        
        else if(porta.equals("")){
            JOptionPane.showMessageDialog(null, "O campo Porta não pode estar vazio!", "Erro", ERROR_MESSAGE);
            return false;
        }
        
        else if(nomeUsuario.equals("")){
            JOptionPane.showMessageDialog(null, "O campo Nome de Usuário não pode estar vazio!", "Erro", ERROR_MESSAGE);
            return false;
        }
        
        else{
            return true;
        }
    }
    
    private static void removeLinhas(){
        DefaultTableModel model = (DefaultTableModel) tblUsuarios.getModel();
        
        int rowCount = model.getRowCount();
        //Remove rows one by one from the end of the table
        for (int i = rowCount - 1; i >= 0; i--) {
            model.removeRow(i);
        }        
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClienteFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClienteFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClienteFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClienteFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClienteFrame().setVisible(true);
            }
        });  
    }    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConectar;
    private javax.swing.JButton btnDesconectar;
    private javax.swing.JButton btnJogar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable tblUsuarios;
    private javax.swing.JTextField txtEndServidor;
    public javax.swing.JTextField txtNomeUsuario;
    private javax.swing.JTextField txtPorta;
    // End of variables declaration//GEN-END:variables
}
